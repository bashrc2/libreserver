#!/bin/bash
#  _    _ _            ___                      
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _ 
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|  
#
# A script to create and install translations for commands
#
# License
# =======
#
# Copyright (C) 2015-2016 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

PROJECT_NAME='libreserver'

# languages to translate into
language=( af sq ar eu be bs bg ca hr zh_cn zh_tw cs da nl en_us et fa fil fi fr fr_CH fr_BE fr_ca ga gl ka de de_du el gu he hi hu is id it ja kn km ko lo lt lv ml ms mi_tn mi_wwow mn no no_gr nn pl pt pt_br ro ru sm sr sk sl so es sv tl ta th to tr uk vi )

MY_EMAIL_ADDRESS='bob@libreserver.org'

COMMAND_FILES=src/${PROJECT_NAME}*

function install_i18next-conv {
    SUDO=''
    if [ -f /usr/bin/sudo ]; then
        SUDO='sudo'
    fi
    if [ -f /usr/sbin/sudo ]; then
        SUDO='sudo'
    fi
    if [ ! -f /usr/bin/i18next-conv ]; then
        ${SUDO} apt-get install -y curl npm
        curl -sL https://deb.nodesource.com/setup_0.12 | ${SUDO} bash -
        ${SUDO} apt-get install -y nodejs
        ${SUDO} npm install i18next-conv -g
    fi
}

function create_translation_files {
    create_arg=$1
    if [ ! -d /tmp/${PROJECT_NAME} ]; then
        mkdir -p /tmp/${PROJECT_NAME}
    fi

    for f in $COMMAND_FILES
    do
        COMMAND_NAME=$(echo $f | awk -F '/' '{print $2}')
        bash --dump-po-strings src/${COMMAND_NAME} | xgettext --msgid-bugs-address=$MY_EMAIL_ADDRESS -L PO -o /tmp/${PROJECT_NAME}/${COMMAND_NAME}.pot -
        if [ -f /tmp/${PROJECT_NAME}/${COMMAND_NAME}.pot ]; then
            for lang in "${language[@]}"
            do
                if [ ! -d locale/${lang} ]; then
                    mkdir -p locale/${lang}
                fi

                if [[ ! -f locale/${lang}/${COMMAND_NAME}.json || "$create_arg" == "overwrite" ]]; then
                    # create po file
                    echo "Creating ${lang} Translation file for ${COMMAND_NAME}..."
                    msginit --no-translator -l ${lang} -i /tmp/${PROJECT_NAME}/${COMMAND_NAME}.pot -o locale/${lang}/${COMMAND_NAME}.po
                    echo 'testing'

                    # convert po to json
                    if [ -f /usr/bin/i18next-conv ]; then
                        if [ -f locale/${lang}/${COMMAND_NAME}.po ]; then
                            i18next-conv -l ${lang} -s locale/${lang}/${COMMAND_NAME}.po -t locale/${lang}/${COMMAND_NAME}.json
                            git add locale/${lang}/${COMMAND_NAME}.json
                        fi
                    fi

                    rm locale/${lang}/${COMMAND_NAME}.po
                fi
            done
            rm /tmp/${PROJECT_NAME}/${COMMAND_NAME}.pot
        fi
    done
}

function add_all_translations {
    for lang in "${language[@]}"
    do
        git add locale/${lang}/*
    done
}

function remove_all_translations {
    for lang in "${language[@]}"
    do
        rm locale/${lang}/*
    done
}

function install_translations {
    for f in $COMMAND_FILES
    do
        COMMAND_NAME=$(echo $f | awk -F '/' '{print $2}')
        for lang in "${language[@]}"
        do
            # convert json to mo
            if [ -f /usr/bin/i18next-conv ]; then
                if [ ! -f locale/${lang}/${COMMAND_NAME}.mo ]; then
                    if [ -f locale/${lang}/${COMMAND_NAME}.json ]; then
                        i18next-conv -l ${lang} -s locale/${lang}/${COMMAND_NAME}.json -t locale/${lang}/${COMMAND_NAME}.mo
                        git add locale/${lang}/${COMMAND_NAME}.mo
                    fi
                fi
            fi

            # install the mo
            if [ -d /usr/share/locale/${lang} ]; then
                if [ -f locale/${lang}/${COMMAND_NAME}.mo ]; then
                    cp locale/${lang}/${COMMAND_NAME}.mo /usr/share/locale/${lang}/${COMMAND_NAME}.mo
                fi
            fi
        done
    done
}

function uninstall_translations {
    for f in $COMMAND_FILES
    do
        COMMAND_NAME=$(echo $f | awk -F '/' '{print $2}')
        for lang in "${language[@]}"
        do
            if [ -f /usr/share/locale/${lang}/${COMMAND_NAME}.mo ]; then
                rm /usr/share/locale/${lang}/${COMMAND_NAME}.mo
            fi
        done
    done
}

if [[ $1 == "translation"* ]]; then
    install_i18next-conv
    create_translation_files overwrite
    add_all_translations
    exit 0
fi

if [[ $1 == "remove"* ]]; then
    remove_all_translations
    exit 0
fi

if [[ $1 == "make" ]]; then
    install_i18next-conv
    create_translation_files
    add_all_translations
    exit 0
fi

if [[ $1 == "install" ]]; then
    install_translations
    exit 0
fi

if [[ $1 == "uninstall" ]]; then
    uninstall_translations
    exit 0
fi

exit 1
