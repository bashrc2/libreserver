#!/bin/bash
#  _    _ _            ___
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|
#
# Functions for Toronto Mesh DNS resolution
#
# License
# =======
#
# Copyright Â© 2019-2023 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

TOMESH_NODES="https://raw.githubusercontent.com/tomeshnet/node-list/master/nodeList.json"

function update_mesh_nodes_tomesh {
    if [ ! -d /etc/tomesh ]; then
        return
    fi

    { echo 'import json';
      echo 'import requests';
      echo '';
      echo "file = open(\"network_map_markers.txt\",\"w\")";
      echo '';
      echo "data = requests.get(\"${TOMESH_NODES}\").json()";
      echo 'for elem in data:';
      echo '    if "status" in elem:';
      echo '        if elem["status"] == "active":';
      # shellcheck disable=SC2028
      echo "            file.write(elem[\"name\"] + \";\" + str(elem[\"longitude\"]) + \";\" + str(elem[\"latitude\"]) + '\n')";
      echo '';
      echo 'file.close()'; } > parse_map.py

    python3 parse_map.py
    rm parse_map.py
    if [ -f network_map_markers.txt ]; then
        create_kml_from_markers network_map_markers.txt network_map_markers.kml
        chown www-data:www-data network_map_markers.kml
        chown www-data:www-data network_map_markers.txt
        echo $"$(wc -l network_map_markers.txt | awk -F ' ' '{print $1}') installed tomesh nodes"
    else
        echo $"0 installed tomesh nodes"
    fi
}

function setup_mesh_tomesh {
    if [ -d /etc/tomesh ]; then
        return
    fi

    mkdir /etc/tomesh

    set_map_location '-79.36195099999998' '43.6508542'
}

function remove_mesh_tomesh {
    rm -rf /etc/tomesh
}

# NOTE: deliberately no exit 0
