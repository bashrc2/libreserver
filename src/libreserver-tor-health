#!/bin/bash
#  _    _ _            ___                      
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _ 
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|  
#
# Returns a health status for Tor
#
# License
# =======
#
# Copyright (C) 2018-2022 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

PROJECT_NAME='libreserver'

export TEXTDOMAIN=${PROJECT_NAME}-tor-health
export TEXTDOMAINDIR="/usr/share/locale"

d1=$(date --date="-10 min" "+%b %d %H:%M"):00
d2=$(date "+%b %d %H:%M"):00
retry_ctr=0
echo -n '' > /var/log/tor/notices_new.log
while read -r line; do
    datestr=$(echo "$line" | awk -F '.' '{print $1}')
    if [[ "$datestr" > "$d1" && "$datestr" < "$d2" || "$datestr" =~ $d2 ]]; then
        if [[ "$line" == *'Retrying'* ]]; then
            retry_ctr=$((retry_ctr+1))
        fi
        echo "$line" >> /var/log/tor/notices_new.log
    fi
done < /var/log/tor/notices.log

mv /var/log/tor/notices_new.log /var/log/tor/notices.log
if ! grep -q "adm:" /etc/group; then
    groupadd adm
fi
chown -R debian-tor:adm /var/log/tor

UPTIME=$(awk -F '.' '{print $1}' < "/proc/uptime")
if [ "$UPTIME" -gt 500 ]; then
    if [ $retry_ctr -gt 5 ]; then
        echo $'Failed'
        exit 0
    fi

    if [ $retry_ctr -gt 0 ]; then
        echo $'Poor'
        exit 0
    fi
else
    if [ $retry_ctr -gt 0 ]; then
        echo $'Starting'
        exit 0
    fi
fi

echo $'Good'
exit 0
