#!/bin/bash
#  _    _ _            ___                      
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _ 
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|  
#
# License
# =======
#
# Copyright (C) 2019-2021 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

VARIANTS='full full-vim'

APP_CATEGORY=organization

IN_DEFAULT_INSTALL=0
INSTALLED_ON_DEFAULT_DOMAIN=0
SHOW_ON_ABOUT=1

# whether to show the domain name in the web UI
SHOW_DOMAIN_IN_WEBADMIN=1

# whether to show https://domain or just teh domain on its own on app screen
SHOW_DOMAIN_ONLY=0

# whether this app will be included in the hson API for the FreedomBox android app
NOT_ON_API=0

# Whether to show on http://libreserver/home
NOT_ON_HOMEPAGE=0

# show port number within the URL on app screens
SHOW_URL_PORT=

# Whether another app is required to be installed before this one
REQUIRES_APP=

GROCY_DOMAIN_NAME=
GROCY_CODE=
GROCY_ONION_PORT=9487
GROCY_REPO="https://github.com/grocy/grocy"
GROCY_COMMIT='5ecd3a585ecc34828a793bf49e2cf873bc58ddf6'
grocy_latest_url='https://releases.grocy.info/latest'

# These parameters are used by the FreedomBox mobile app and web UI
GROCY_SHORT_DESCRIPTION="Groceries and household management"
GROCY_DESCRIPTION="Groceries and household management"
GROCY_MOBILE_APP_URL=

# Any ports which should be added to the firewall, separated by commas
GROCY_FIREWALL_PORTS=""

GROCY_ADMIN_PASSWORD=

grocy_variables=(ONION_ONLY
                 GROCY_DOMAIN_NAME
                 GROCY_CODE
                 DDNS_PROVIDER
                 MY_USERNAME)

function grocy_remove_bad_links {
    if [ ! "$GROCY_DOMAIN_NAME" ]; then
        read_config_param GROCY_DOMAIN_NAME
    fi

    http_str='https'
    grocy_domain="$GROCY_DOMAIN_NAME"
    if [[ "$ONION_ONLY" != 'no' ]]; then
        grocy_domain=$(cat /var/lib/tor/hidden_service_grocy/hostname)
        http_str='http'
    fi

    cd "/var/www/$GROCY_DOMAIN_NAME/htdocs/public" || exit 29

    jquery_version='2.2.4'
    jquery_download "$jquery_version" '893e90f6230962e42231635df650f20544ad22affc3ee396df768eaa6bc5a6a2'

    if grep -q 'googleapi' node_modules/timeago/index.html; then
        sed -i "s|https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js|${http_str}://${grocy_domain}/jquery-${jquery_version}.js|g" node_modules/timeago/index.html
    fi

    if grep -q 'googleapi' node_modules/timeago/test/index.html; then
        sed -i "s|http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js|${http_str}://${grocy_domain}/jquery-${jquery_version}.js|g" node_modules/timeago/test/index.html
    fi

    if [ -d node_modules/chart.js/dist/docs ]; then
        rm -rf node_modules/chart.js/dist/docs
    fi

    if [ -f node_modules/toastr/demo.html ]; then
        rm node_modules/toastr/demo.html
    fi

    if [ -d node_modules/chart.js/samples ]; then
        rm -rf node_modules/chart.js/samples
    fi

    if [ -d node_modules/startbootstrap-sb-admin/node_modules/chart.js/samples ]; then
        rm -rf node_modules/startbootstrap-sb-admin/node_modules/chart.js/samples
    fi

    if [ -d node_modules/summernote/examples ]; then
        rm -rf node_modules/summernote/examples
    fi

    if [ -d node_modules/bootbox/docs ]; then
        rm -rf node_modules/bootbox/docs
    fi

    if grep -q 'googleapi' node_modules/fullcalendar/dist/gcal.js; then
        sed -i "s|GcalEventSource.API_BASE =.*|GcalEventSource.API_BASE = '';|g" node_modules/fullcalendar/dist/gcal.js
        sed -i "s|https:\\\/\\\/www.googleapis.com|${http_str}://${grocy_domain}|g" node_modules/fullcalendar/dist/gcal.js
        sed -i "s|https?:\\\/\\\/www.google.com|${http_str}://${grocy_domain}|g" node_modules/fullcalendar/dist/gcal.js
        sed -i "s|https:\\\/\\\/www.google.com|${http_str}://${grocy_domain}|g" node_modules/fullcalendar/dist/gcal.js

        cp node_modules/fullcalendar/dist/gcal.js node_modules/fullcalendar/dist/gcal.min.js
        chown www-data:www-data node_modules/fullcalendar/dist/gcal.min.js
    fi
}

function change_default_domain_name_grocy {
    new_default_domain_name="$1"
    # If anything references DEFAULT_DOMAIN_NAME then change it here
}

function logging_on_grocy {
    echo -n ''
}

function logging_off_grocy {
    echo -n ''
}

function remove_user_grocy {
    remove_username="$1"

    #"${PROJECT_NAME}-pass" -u "$remove_username" --rmapp grocy
}

function add_user_grocy {
    new_username="$1"
    new_user_password="$2"

    #"${PROJECT_NAME}-pass" -u "$new_username" -a grocy -p "$new_user_password"
    echo '0'
}

function install_interactive_grocy {
    if [ ! "$ONION_ONLY" ]; then
        ONION_ONLY='no'
    fi

    if [[ "$ONION_ONLY" != "no" ]]; then
        GROCY_DOMAIN_NAME='grocy.local'
        write_config_param "GROCY_DOMAIN_NAME" "$GROCY_DOMAIN_NAME"
    else
        interactive_site_details "grocy" "GROCY_DOMAIN_NAME" "GROCY_CODE"
    fi
    APP_INSTALLED=1
}

function change_password_grocy {
    curr_username="$1"
    new_user_password="$2"

    read_config_param 'GROCY_DOMAIN_NAME'

    #"${PROJECT_NAME}-pass" -u "$curr_username" -a grocy -p "$new_user_password"
}

function reconfigure_grocy {
    # This is used if you need to switch identity. Dump old keys and generate new ones
    echo -n ''
}

function configure_interactive_grocy {
    W=(1 $"Option 1"
       2 $"Option 2")

    while true
    do
        # shellcheck disable=SC2068
        selection=$(dialog --backtitle $"LibreServer Administrator Control Panel" --title $"grocy" --menu $"Choose an operation, or ESC for main menu:" 14 70 3 "${W[@]}" 3>&2 2>&1 1>&3)

        if [ ! "$selection" ]; then
           break
        fi
        case $selection in
            1) # call some function for option 1
               ;;
            2) # call some function for option 2
               ;;
        esac
    done
}

function upgrade_distro_grocy {
    target_distro="$1"
    # include anything here needed to upgrade to the target distro
}

function upgrade_grocy {
    grocy_remove_bad_links
}

function backup_local_grocy {
    GROCY_DOMAIN_NAME='grocy'
    if grep -q "grocy domain" "$COMPLETION_FILE"; then
        GROCY_DOMAIN_NAME=$(get_completion_param "grocy domain")
    fi

    source_directory=/var/www/${GROCY_DOMAIN_NAME}/htdocs

    suspend_site "${GROCY_DOMAIN_NAME}"

    dest_directory=grocy
    backup_directory_to_usb "$source_directory" $dest_directory

    restart_site
}

function restore_local_grocy {
    if ! grep -q "grocy domain" "$COMPLETION_FILE"; then
        return
    fi
    GROCY_DOMAIN_NAME=$(get_completion_param "grocy domain")
    if [ ! "$GROCY_DOMAIN_NAME" ]; then
        return
    fi
    suspend_site "${GROCY_DOMAIN_NAME}"
    temp_restore_dir=/root/tempgrocy
    grocy_dir=/var/www/${GROCY_DOMAIN_NAME}/htdocs

    restore_directory_from_usb $temp_restore_dir grocy
    if [ -d $temp_restore_dir ]; then
        if [ -d "$temp_restore_dir$grocy_dir" ]; then
            cp -rp "$temp_restore_dir$grocy_dir"/* "$grocy_dir"/
        else
            if [ ! -d "$grocy_dir" ]; then
                mkdir "$grocy_dir"
            fi
            cp -rp "$temp_restore_dir"/* "$grocy_dir"/
        fi
        chown -R www-data:www-data "$grocy_dir"
        rm -rf $temp_restore_dir
    fi
    restart_site
}

function backup_remote_grocy {
    echo -n ''
}

function restore_remote_grocy {
    echo -n ''
}

function remove_grocy {
    nginx_dissite "$GROCY_DOMAIN_NAME"
    remove_certs "$GROCY_DOMAIN_NAME"


    if [ -d "/var/www/$GROCY_DOMAIN_NAME" ]; then
        rm -rf "/var/www/$GROCY_DOMAIN_NAME"
    fi
    if [ -f "/etc/nginx/sites-available/$GROCY_DOMAIN_NAME" ]; then
        rm "/etc/nginx/sites-available/$GROCY_DOMAIN_NAME"
    fi
    remove_onion_service grocy "${GROCY_ONION_PORT}"
    if grep -q "grocy" /etc/crontab; then
        sed -i "/grocy/d" /etc/crontab
    fi
    remove_app grocy
    remove_completion_param install_grocy
    sed -i '/grocy/d' "$COMPLETION_FILE"

    remove_ddns_domain "$GROCY_DOMAIN_NAME"
}

function install_grocy {
    increment_app_install_progress

    INSTALL_PACKAGES php-php-gettext php-curl php-gd php-mysql git curl

    increment_app_install_progress

    INSTALL_PACKAGES memcached php-memcached php-intl exiftool libfcgi0ldbl

    increment_app_install_progress

    INSTALL_PACKAGES unzip wget libsqlite3-dev php-sqlite3

    increment_app_install_progress

    if [ ! "$GROCY_DOMAIN_NAME" ]; then
        echo $'No domain name was given for grocy'
        exit 35
    fi

    if [ -d "/var/www/$GROCY_DOMAIN_NAME/htdocs" ]; then
        rm -rf "/var/www/$GROCY_DOMAIN_NAME/htdocs"
    fi
    mkdir -p "/var/www/$GROCY_DOMAIN_NAME/htdocs"

    cd "/var/www/$GROCY_DOMAIN_NAME/htdocs" || exit 36

    if [ -f grocy.zip ]; then
        rm grocy.zip
    fi
    if [[ "$ONION_ONLY" == 'no' ]]; then        
        wget ${grocy_latest_url} -O grocy.zip
    else
        torsocks wget ${grocy_latest_url} -O grocy.zip
        if [ ! -f grocy.zip ]; then
            wget ${grocy_latest_url} -O grocy.zip
        fi
    fi
    if [ ! -f grocy.zip ]; then
        echo $'grocy zip could not be downloaded'
        exit 27
    fi

    increment_app_install_progress

    unzip grocy.zip

    if [ ! -d "/var/www/$GROCY_DOMAIN_NAME/htdocs/public" ]; then
        echo $'grocy archive did not uncompress'
        exit 75
    fi

    increment_app_install_progress

    cd "/var/www/$GROCY_DOMAIN_NAME/htdocs" || exit 36

    increment_app_install_progress

    if [ ! -f "/var/www/$GROCY_DOMAIN_NAME/htdocs/config-dist.php" ]; then
        echo $'config-dist.php missing'
        exit 87
    fi
    if [ ! -d "/var/www/$GROCY_DOMAIN_NAME/htdocs/data" ]; then
        echo $'data directory missing'
        exit 89
    fi

    cp "/var/www/$GROCY_DOMAIN_NAME/htdocs/config-dist.php" "/var/www/$GROCY_DOMAIN_NAME/htdocs/data/config.php"

    increment_app_install_progress

    chmod +x "/var/www/$GROCY_DOMAIN_NAME/htdocs/update.sh"

    increment_app_install_progress

    if [ -f "$IMAGE_PASSWORD_FILE" ]; then
        GROCY_ADMIN_PASSWORD="$(printf "%s" "$(cat "$IMAGE_PASSWORD_FILE")")"
    else
        if [ ! "$GROCY_ADMIN_PASSWORD" ]; then
            GROCY_ADMIN_PASSWORD="$(create_password "${MINIMUM_PASSWORD_LENGTH}")"
        fi
    fi

    # set the default password
    sed -i "s|password_hash('admin'|password_hash('${GROCY_ADMIN_PASSWORD}'|g" "/var/www/$GROCY_DOMAIN_NAME/htdocs/migrations/0027.php"

    increment_app_install_progress

    chmod g+w "/var/www/$GROCY_DOMAIN_NAME/htdocs"
    chown -R www-data:www-data "/var/www/$GROCY_DOMAIN_NAME/htdocs"

    add_ddns_domain "$GROCY_DOMAIN_NAME"

    GROCY_ONION_HOSTNAME=$(add_onion_service grocy 80 "${GROCY_ONION_PORT}")

    if [[ "$ONION_ONLY" == "no" ]]; then
        sed -i "s|Setting('BASE_URL'.*|Setting('BASE_URL', 'https://${GROCY_DOMAIN_NAME}');|g" "/var/www/$GROCY_DOMAIN_NAME/htdocs/data/config.php"
    else
        sed -i "s|Setting('BASE_URL'.*|Setting('BASE_URL', 'http://${GROCY_ONION_HOSTNAME}');|g" "/var/www/$GROCY_DOMAIN_NAME/htdocs/data/config.php"
    fi

    increment_app_install_progress

    grocy_nginx_site=/etc/nginx/sites-available/$GROCY_DOMAIN_NAME
    if [[ "$ONION_ONLY" == "no" ]]; then
        nginx_http_redirect "$GROCY_DOMAIN_NAME" "index index.php"
        { echo 'server {';
          echo '  listen 443 ssl;';
          echo '  #listen [::]:443 ssl;';
          echo "  server_name $GROCY_DOMAIN_NAME;";
          echo ''; } >> "$grocy_nginx_site"
        nginx_compress "$GROCY_DOMAIN_NAME"
        echo '' >> "$grocy_nginx_site"
        echo '  # Security' >> "$grocy_nginx_site"
        nginx_ssl "$GROCY_DOMAIN_NAME"

        nginx_security_options "$GROCY_DOMAIN_NAME"
        nginx_robots "$GROCY_DOMAIN_NAME"

        { echo '  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;';
          echo "  add_header Onion-Location http://${GROCY_ONION_HOSTNAME}\$request_uri;";
          echo '';
          echo '    access_log /dev/null;';
          echo '    error_log /dev/null;';
          echo '';
          echo "    root /var/www/$GROCY_DOMAIN_NAME/htdocs/public;";
          echo '';
          echo '  index index.php;';
          echo '  location ~ \.php {';
          echo '    include snippets/fastcgi-php.conf;';
          echo "    fastcgi_pass unix:/var/run/php/php${PHP_VERSION}-fpm.sock;";
          echo '    fastcgi_read_timeout 30;';
          echo '    fastcgi_param HTTPS on;';
          echo '  }';
          echo '';
          echo '  # Location';
          echo '  location / {'; } >> "$grocy_nginx_site"
        nginx_limits "$GROCY_DOMAIN_NAME" '15m'
        { echo "    try_files \$uri /index.php;";
          echo '  }';
          echo '}'; } >> "$grocy_nginx_site"
    else
        echo -n '' > "$grocy_nginx_site"
    fi
    { echo 'server {';
      echo "    listen 127.0.0.1:$GROCY_ONION_PORT default_server;";
      echo "    server_name $GROCY_ONION_HOSTNAME;";
      echo ''; } >> "$grocy_nginx_site"
    nginx_compress "$GROCY_DOMAIN_NAME"
    echo '' >> "$grocy_nginx_site"
    nginx_security_options "$GROCY_DOMAIN_NAME"
    { echo '';
      echo '    access_log /dev/null;';
      echo '    error_log /dev/null;';
      echo '';
      echo "    root /var/www/$GROCY_DOMAIN_NAME/htdocs/public;";
      echo '';
      echo '  index index.php;';
      echo '  location ~ \.php {';
      echo '    include snippets/fastcgi-php.conf;';
      echo "    fastcgi_pass unix:/var/run/php/php${PHP_VERSION}-fpm.sock;";
      echo '    fastcgi_read_timeout 30;';
      echo '    fastcgi_param HTTPS off;';
      echo '  }';
      echo '';
      echo '  # Location';
      echo '  location / {'; } >> "$grocy_nginx_site"
    nginx_limits "$GROCY_DOMAIN_NAME" '15m'
    { echo "    try_files \$uri /index.php;";
      echo '  }';
      echo '}'; } >> "$grocy_nginx_site"

    configure_php

    increment_app_install_progress

    grocy_remove_bad_links

    increment_app_install_progress

    create_site_certificate "$GROCY_DOMAIN_NAME" 'yes'

    nginx_ensite "$GROCY_DOMAIN_NAME"

    # shellcheck disable=SC2086
    systemctl restart php${PHP_VERSION}-fpm

    increment_app_install_progress

    systemctl restart nginx

    increment_app_install_progress

    "${PROJECT_NAME}-pass" -u "$MY_USERNAME" -a grocy -p "$GROCY_ADMIN_PASSWORD"
    set_completion_param "grocy domain" "$GROCY_DOMAIN_NAME"

    APP_INSTALLED=1
}

# NOTE: deliberately there is no "exit 0"
