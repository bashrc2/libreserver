#!/bin/bash
#  _    _ _            ___
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|
#
# Functions for NYC mesh DNS resolution
#
# License
# =======
#
# Copyright Â© 2019-2023 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

NYCMESH_REPO="https://github.com/nycmeshnet/nycmesh-dns"
NYCMESH_NODES="https://raw.githubusercontent.com/nycmeshnet/node-db/master/data/nodes.json"

function update_mesh_nodes_nyc {
    if [ ! -d /etc/nycmesh ]; then
        return
    fi

    { echo 'import json';
      echo 'import requests';
      echo '';
      echo "file = open(\"network_map_markers.txt\",\"w\")";
      echo '';
      echo "data = requests.get(\"${NYCMESH_NODES}\").json()";
      echo 'for elem in data:';
      echo '    if "status" in elem:';
      echo '        if elem["status"] == "Installed":';
      # shellcheck disable=SC2028
      echo "            file.write(str(elem[\"id\"]) + \";\" + str(elem[\"coordinates\"][0]) + \";\" + str(elem[\"coordinates\"][1]) + '\n')";
      echo '';
      echo 'file.close()'; } > parse_map.py

    python3 parse_map.py
    rm parse_map.py
    if [ -f network_map_markers.txt ]; then
        create_kml_from_markers network_map_markers.txt network_map_markers.kml
        chown www-data:www-data network_map_markers.kml
        chown www-data:www-data network_map_markers.txt
        echo $"$(wc -l network_map_markers.txt | awk -F ' ' '{print $1}') installed NYC Mesh nodes"
    else
        echo $"0 installed NYC Mesh nodes"
    fi
}

function setup_mesh_nyc {
    if grep -q 'nycmesh' /etc/crontab; then
        if [ -d /etc/nycmesh ]; then
            cd /etc/nycmesh || return
            git stash
            git pull
            return
        fi
    fi

    git clone $NYCMESH_REPO /etc/nycmesh
    cd /etc/nycmesh || exit 62

    if ! grep -q 'nycmesh' /etc/crontab; then
        echo "*/10 * * * *   root    cd /etc/nycmesh && /etc/nycmesh/deploy.sh 2>&1 > /dev/null" >> /etc/crontab
    fi

    set_map_location '-73.9799' '40.6973'
}

function remove_mesh_nyc {
    if grep -q 'nycmesh' /etc/crontab; then
        sed -i '/nycmesh/d' /etc/crontab
    fi

    # remove existing config
    rm -rf /var/lib/knot/zones/*

    # restore previous config
    cp /etc/knot-resolver/kresd_prev.conf /etc/knot-resolver/kresd.conf
    cp /etc/knot/knot_prev.conf /etc/knot/knot.conf
    chown knot:knot /etc/knot/knot.conf

    rm -rf /etc/nycmesh

    # restart knot daemons
    systemctl restart knot
    systemctl restart kresd.socket
    systemctl restart system-kresd.slice
}

# NOTE: deliberately no exit 0
