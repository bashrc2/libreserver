#!/bin/bash
#  _    _ _            ___                      
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _ 
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|  
#
# Adds an email address rule to the email configuration
#
# License
# =======
#
# Copyright (C) 2015-2021 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

PROJECT_NAME='libreserver'

export TEXTDOMAIN=${PROJECT_NAME}-addemail
export TEXTDOMAINDIR="/usr/share/locale"

MYUSERNAME=$USER
EMAILADDRESS=
SUBJECT_TEXT=
GROUP_NAME=
PUBLIC='no'

function show_help {
    echo ''
    echo $"${PROJECT_NAME}-addemail -u [username] -e [email address] -s [subject text] -g [group name] --public [yes|no]"
    echo ''
    exit 0
}

while [ $# -gt 1 ]
do
    key="$1"

    case $key in
        -h|--help)
            show_help
            ;;
        -u|--user)
            shift
            MYUSERNAME="$1"
            ;;
        -e|--email)
            shift
            EMAILADDRESS="$1"
            ;;
        -s|--subject)
            shift
            SUBJECT_TEXT="$1"
            ;;
        -g|--group)
            shift
            GROUP_NAME="$1"
            ;;
        -p|--public)
            shift
            PUBLIC="$1"
            ;;
        *)
            # unknown option
            ;;
    esac
    shift
done

if ! [[ "$MYUSERNAME" && "$GROUP_NAME" ]]; then
    show_help
fi

if [ "${#EMAILADDRESS}" -lt 2 ]; then
    if [ ${#SUBJECT_TEXT} -lt 2 ]; then
        show_help
    fi
fi

MUTTRC="/home/$MYUSERNAME/.muttrc"
PM="/home/$MYUSERNAME/.procmailrc"
LISTDIR="/home/$MYUSERNAME/Maildir/$GROUP_NAME"

proc_rule="  * ^From:.*$EMAILADDRESS"
proc_comment="# Email rule for $EMAILADDRESS -> $GROUP_NAME"
if [ ${#SUBJECT_TEXT} -gt 0 ]; then
    proc_rule="  * ^From:.*$EMAILADDRESS"
    proc_comment="# Email rule for '$SUBJECT_TEXT' -> $GROUP_NAME"
fi

if [ ! -d "$LISTDIR" ]; then
    mkdir -m 700 "$LISTDIR"
    mkdir -m 700 "$LISTDIR/tmp"
    mkdir -m 700 "$LISTDIR/new"
    mkdir -m 700 "$LISTDIR/cur"
fi
chown -R "$MYUSERNAME":"$MYUSERNAME" "$LISTDIR"
if ! grep -q "$proc_comment" "$PM"; then
    if [[ $PUBLIC != "yes" ]]; then
        # private emails go after the encryption stage
        { echo '';
          echo "$proc_comment";
          echo ":0";
          echo "$proc_rule";
          echo "$LISTDIR/new";
          echo "# End of rule"; } >> "$PM"
    else
        # public emails are copied before the encryption stage
        if ! grep -q '# encrypt' "$PM"; then
            { echo '';
              echo "$proc_comment";
              echo ":0";
              echo "$proc_rule";
              echo "$LISTDIR/new";
              echo "# End of rule"; } >> "$PM"
        else
            sed -i "/# encrypt/i $proc_comment\\n:0\\n${proc_rule}\\n$LISTDIR/new\\n# End of rule\\n" "$PM"
        fi
    fi
    chown "$MYUSERNAME":"$MYUSERNAME" "$PM"
fi

if [ ! -f "$MUTTRC" ]; then
    cp /etc/Muttrc "$MUTTRC"
    chown "$MYUSERNAME":"$MYUSERNAME" "$MUTTRC"
fi

PROCMAILLOG=/home/$MYUSERNAME/log
if [ ! -d "$PROCMAILLOG" ]; then
    mkdir "$PROCMAILLOG"
    chown -R "$MYUSERNAME":"$MYUSERNAME" "$PROCMAILLOG"
fi

MUTT_MAILBOXES=$(grep "mailboxes =" "$MUTTRC")
if [[ "$MUTT_MAILBOXES" != *$GROUP_NAME* ]]; then
    if ! grep -q "=$GROUP_NAME" "$MUTTRC"; then
        sed -i "s|$MUTT_MAILBOXES|$MUTT_MAILBOXES =$GROUP_NAME|g" "$MUTTRC"
        chown "$MYUSERNAME":"$MYUSERNAME" "$MUTTRC"
    fi
fi

exit 0
