#!/bin/bash
#  _    _ _            ___                      
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _ 
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|  
#
# Watchdog functions to keep systems running even if they crash
# systemd itself can handle this, but some debian packages are in
# twilight world where they still use the older init scripts
#
# License
# =======
#
# Copyright (C) 2014-2022 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# name of a script which keeps running processes going even if they crash
WATCHDOG_SCRIPT_NAME="keepon"

function install_watchdog_script {
    if [[ $(is_completed "${FUNCNAME[0]}") == "1" ]]; then
        return
    fi
    { echo '#!/bin/bash';
      echo 'LOGFILE=/var/log/keepon.log';
      echo "CURRENT_DATE=\$(date)"; } > "/usr/bin/$WATCHDOG_SCRIPT_NAME"
    # application specific stuff is added later
    chmod +x /usr/bin/$WATCHDOG_SCRIPT_NAME

    function_check cron_add_mins
    cron_add_mins 1 "/usr/bin/$WATCHDOG_SCRIPT_NAME"

    mark_completed "${FUNCNAME[0]}"
}

function daemon_is_running {
    daemon_name="$1"
    systemctl is-active "${daemon_name}" >/dev/null 2>&1 && echo Running
}

function add_watchdog_daemon {
    daemon_name="$1"

    { echo '';
      echo "# keep ${daemon_name} daemon running";
      echo "RUNNING=\$(systemctl is-active ${daemon_name} >/dev/null 2>&1 && echo Running)";
      echo "if [ ! \$RUNNING ]; then";
      echo "  systemctl start ${daemon_name}";
      echo "  echo -n \$CURRENT_DATE >> \$LOGFILE";
      echo "  echo \"${daemon_name} daemon restarted\" >> \$LOGFILE";
      echo 'fi';
      echo "# End of ${daemon_name}"; } >> "/usr/bin/$WATCHDOG_SCRIPT_NAME"
}

function remove_watchdog_daemon {
    daemon_name="$1"

    sed -i "/# keep ${daemon_name} daemon running/,/# End of ${daemon_name}/d" "/usr/bin/$WATCHDOG_SCRIPT_NAME"
}

# NOTE: deliberately no exit 0
