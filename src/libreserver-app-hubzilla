#!/bin/bash
#  _    _ _            ___                      
# | |  (_) |__ _ _ ___/ __| ___ _ ___ _____ _ _ 
# | |__| | '_ \ '_/ -_)__ \/ -_) '_\ V / -_) '_|
# |____|_|_.__/_| \___|___/\___|_|  \_/\___|_|  
#
# Hubzilla application
#
# php-mcrypt is missing from bullseye
#
# License
# =======
#
# Copyright (C) 2014-2021 Bob Mottram <bob@libreserver.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

VARIANTS=''

APP_CATEGORY=social

IN_DEFAULT_INSTALL=0
SHOW_ON_ABOUT=1
NOT_ON_ONION=1
REQUIRES_APP=

HUBZILLA_DOMAIN_NAME=
HUBZILLA_CODE=
HUBZILLA_ONION_PORT=8085
HUBZILLA_REPO="https://framagit.org/hubzilla/core"
HUBZILLA_COMMIT='6f93d9848c43019d43ea76c27d42d657ba031cd7'
HUBZILLA_ADDONS_REPO="https://framagit.org/hubzilla/addons"
HUBZILLA_ADDONS_COMMIT='f44d00236003d21d78cb9e93ec8fbbbb4423f85c'
HUBZILLA_ADMIN_PASSWORD=

HUBZILLA_SHORT_DESCRIPTION=$'Web publishing system'
HUBZILLA_DESCRIPTION=$'Web publishing system'
HUBZILLA_MOBILE_APP_URL='https://f-droid.org/packages/com.dfa.hubzilla_android'

hubzilla_variables=(ONION_ONLY
                    HUBZILLA_DOMAIN_NAME
                    HUBZILLA_CODE
                    DDNS_PROVIDER
                    MY_USERNAME
                    HUBZILLA_ADDONS_REPO)

function upgrade_distro_hubzilla {
    target_distro="$1"

    if [[ "$target_distro" == 'bullseye' ]]; then
        echo -n ''
    fi
}

function logging_on_hubzilla {
    echo -n ''
}

function logging_off_hubzilla {
    echo -n ''
}

function remove_user_hubzilla {
    remove_username="$1"
    # TODO: remove user
    "${PROJECT_NAME}-pass" -u "$remove_username" --rmapp hubzilla
}

function add_user_hubzilla {
    if [[ $(app_is_installed hubzilla) == "0" ]]; then
        echo '0'
        return
    fi

    new_username="$1"
    new_user_password="$2"
    # TODO: add user
    "${PROJECT_NAME}-pass" -u "$new_username" -a hubzilla -p "$new_user_password"
    echo '0'
}

function hubzilla_renew_cert {
    dialog --title $"Renew SSL certificate" \
           --backtitle $"LibreServer Control Panel" \
           --yesno $"\\nThis will renew a letsencrypt certificate. Select 'yes' to continue" 16 60
    sel=$?
    case $sel in
        1) return;;
        255) return;;
    esac
    HUBZILLA_DOMAIN_NAME=$(get_completion_param "hubzilla domain")
    if [ ! -d "/var/www/$HUBZILLA_DOMAIN_NAME/htdocs" ]; then
        dialog --title $"Renew SSL certificate" \
               --msgbox $"Hubzilla install directory not found" 6 40
        return
    fi
    if ! "${PROJECT_NAME}-renew-cert" -h "$HUBZILLA_DOMAIN_NAME" -p 'letsencrypt'; then
        any_key
    else
        dialog --title $"Renew SSL certificate" \
               --msgbox $"Hubzilla certificate has been renewed" 6 40
    fi
}

function hubzilla_channel_directory_server {
    if ! grep -q "hubzilla domain" "$COMPLETION_FILE"; then
        dialog --title $"Hubzilla channel directory server" \
               --msgbox $"Hubzilla is not installed on this system" 6 40
        return
    fi
    HUBZILLA_DOMAIN_NAME=$(get_completion_param "hubzilla domain")
    if [ ! -d "/var/www/$HUBZILLA_DOMAIN_NAME/htdocs" ]; then
        dialog --title $"Hubzilla channel directory server" \
               --msgbox $"Hubzilla install directory not found" 6 40
        return
    fi

    data=$(mktemp 2>/dev/null)
    dialog --title $"Hubzilla channel directory server" \
           --backtitle $"LibreServer Control Panel" \
           --inputbox $"When you click on 'channel directory' this is where Hubzilla will obtain its list from" 8 60 2>"$data"
    sel=$?
    case $sel in
        0)
            hubzilla_domain_server=$(<"$data")
            if [[ $hubzilla_domain_server != *"."* ]]; then
                rm -f "$data"
                return
            fi
            if [[ $hubzilla_domain_server != "https"* ]]; then
                dialog --title $"Hubzilla channel directory server" \
                       --msgbox $"\\nInvalid domain - include the https://" 7 60
                rm -f "$data"
                return
            fi
            "./var/www/$HUBZILLA_DOMAIN_NAME/htdocs/util/config" system directory_server "$hubzilla_domain_server"
            dialog --title $"Hubzilla channel directory server" \
                   --msgbox $"\\nDomain channel directory server changed to\\n\\n  $hubzilla_domain_server" 10 60
            ;;
    esac
    rm -f "$data"
}

function configure_interactive_hubzilla {
    W=(1 $"Set channel directory server"
       2 $"Renew SSL certificate")

    while true
    do
        # shellcheck disable=SC2068
        selection=$(dialog --backtitle $"LibreServer Administrator Control Panel" --title $"Hubzilla" --menu $"Choose an operation, or ESC to exit:" 10 60 2 "${W[@]}" 3>&2 2>&1 1>&3)

        if [ ! "$selection" ]; then
            break
        fi

        case $selection in
            1) hubzilla_channel_directory_server;;
            2) hubzilla_renew_cert;;
        esac
    done
}

function install_interactive_hubzilla {
    if [[ "$ONION_ONLY" != "no" ]]; then
        return
    fi

    function_check interactive_site_details
    interactive_site_details hubzilla

    APP_INSTALLED=1
}

function change_password_hubzilla {
#    HUBZILLA_USERNAME="$1"
    HUBZILLA_PASSWORD="$2"
    if [ ${#HUBZILLA_PASSWORD} -lt 8 ]; then
        echo $'Hubzilla password is too short'
        return
    fi
    # TODO: This doesn't actually change the password
    #${PROJECT_NAME}-pass -u $HUBZILLA_USERNAME -a hubzilla -p "$HUBZILLA_PASSWORD"
}

function hubzilla_create_database {
    if [ -f "$IMAGE_PASSWORD_FILE" ]; then
        HUBZILLA_ADMIN_PASSWORD="$(printf "%s" "$(cat "$IMAGE_PASSWORD_FILE")")"
    fi
    if [ ! "$HUBZILLA_ADMIN_PASSWORD" ]; then
        HUBZILLA_ADMIN_PASSWORD="$(create_password "${MINIMUM_PASSWORD_LENGTH}")"
    fi
    "${PROJECT_NAME}-pass" -u "$MY_USERNAME" -a hubzilla -p "$HUBZILLA_ADMIN_PASSWORD"
    if [ ! "$HUBZILLA_ADMIN_PASSWORD" ]; then
        return
    fi

    function_check create_database
    create_database hubzilla "$HUBZILLA_ADMIN_PASSWORD"
}

function reconfigure_hubzilla {
    echo -n ''
}

function upgrade_hubzilla {
    # ensure that repos are no longer pointing to github
    read_config_param HUBZILLA_REPO
    if [[ "$HUBZILLA_REPO" == *'github'* ]]; then
        HUBZILLA_REPO="https://framagit.org/hubzilla/core"
        write_config_param HUBZILLA_REPO "$HUBZILLA_REPO"
    fi
    read_config_param HUBZILLA_ADDONS_REPO
    if [[ "$HUBZILLA_ADDONS_REPO" == *'github'* ]]; then
        HUBZILLA_ADDONS_REPO="https://framagit.org/hubzilla/addons"
        write_config_param HUBZILLA_ADDONS_REPO "$HUBZILLA_ADDONS_REPO"
    fi

    HUBZILLA_PATH=/var/www/$HUBZILLA_DOMAIN_NAME/htdocs

    CURR_HUBZILLA_COMMIT=$(get_completion_param "hubzilla commit")
    if [[ "$CURR_HUBZILLA_COMMIT" == "$HUBZILLA_COMMIT" ]]; then
        chmod 1755 "$HUBZILLA_PATH/store/[data]/smarty3"
        chmod 1755 "$HUBZILLA_PATH/view/tpl"
        chown -R www-data:www-data "$HUBZILLA_PATH/store"
        chmod 1755 "$HUBZILLA_PATH/view/tpl/smarty3"
        chmod 755 "$HUBZILLA_PATH/.htconfig.php"
        return
    fi

    function_check set_repo_commit
    set_repo_commit "$HUBZILLA_PATH" "hubzilla commit" "$HUBZILLA_COMMIT" $HUBZILLA_REPO
    set_repo_commit "$HUBZILLA_PATH/addon" "hubzilla addons commit" "$HUBZILLA_ADDONS_COMMIT" $HUBZILLA_ADDONS_REPO
    if [ -d "$HUBZILLA_PATH/redmatrix-themes1" ]; then
        cd "$HUBZILLA_PATH/redmatrix-themes1" || exit 246
        git merge --abort
        git stash
        git pull
        cp -r "$HUBZILLA_PATH/redmatrix-themes1/"* "$HUBZILLA_PATH/view/theme/"
        chown -R www-data:www-data "$HUBZILLA_PATH"
    fi

    chmod 1755 "$HUBZILLA_PATH/store/[data]/smarty3"
    chmod 1755 "$HUBZILLA_PATH/view/tpl"
    chown -R www-data:www-data "$HUBZILLA_PATH/store"
    chmod 1755 "$HUBZILLA_PATH/view/tpl/smarty3"
    chmod 755 "$HUBZILLA_PATH/.htconfig.php"
}

function backup_local_hubzilla {
    hubzilla_path=/var/www/${HUBZILLA_DOMAIN_NAME}/htdocs
    if [ -d "$hubzilla_path" ]; then
        function_check backup_database_to_usb
        backup_database_to_usb hubzilla

        backup_directory_to_usb "$hubzilla_path" hubzilla
    fi
}

function restore_local_hubzilla {
    temp_restore_dir=/root/temphubzilla
    hubzilla_dir=/var/www/${HUBZILLA_DOMAIN_NAME}/htdocs

    function_check hubzilla_create_database
    hubzilla_create_database

    restore_database hubzilla "${HUBZILLA_DOMAIN_NAME}"
    if [ -d "$USB_MOUNT/backup/hubzilla" ]; then
        if [ ! -d "$hubzilla_dir/store/[data]/smarty3" ]; then
            mkdir -p "$hubzilla_dir/store/[data]/smarty3"
        fi
        chmod 1755 "$hubzilla_dir/store/[data]/smarty3"
        chown -R www-data:www-data "$hubzilla_dir/"*
        if [ -d $temp_restore_dir ]; then
            rm -rf $temp_restore_dir
        fi

        MARIADB_PASSWORD=$("${PROJECT_NAME}-pass" -u root -a mariadb)
        HUBZILLA_PATH="/var/www/$HUBZILLA_DOMAIN_NAME/htdocs"
        sed -i "s|\$db_pass =.*|\$db_pass = '${MARIADB_PASSWORD}';|g" "$HUBZILLA_PATH/.htconfig.php"
        MARIADB_PASSWORD=
    fi
}

function backup_remote_hubzilla {
    echo -n ''
}

function restore_remote_hubzilla {
    echo -n ''
}

function remove_hubzilla {
    if [ ${#HUBZILLA_DOMAIN_NAME} -eq 0 ]; then
        return
    fi
    nginx_dissite "$HUBZILLA_DOMAIN_NAME"
    remove_certs "${HUBZILLA_DOMAIN_NAME}"
    if [ -d "/var/www/$HUBZILLA_DOMAIN_NAME" ]; then
        rm -rf "/var/www/$HUBZILLA_DOMAIN_NAME"
    fi
    if [ -f "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME" ]; then
        rm "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
    fi
    function_check drop_database
    drop_database hubzilla
    function_check remove_onion_service
    remove_onion_service hubzilla ${HUBZILLA_ONION_PORT}
    sed -i '/hubzilla/d' "$COMPLETION_FILE"
    sed -i '/poller.php/d' /etc/crontab

    function_check remove_ddns_domain
    remove_ddns_domain "$HUBZILLA_DOMAIN_NAME"
}

function install_hubzilla {
    if [ ! "$HUBZILLA_DOMAIN_NAME" ]; then
        return
    fi

    if [[ "$ONION_ONLY" != "no" ]]; then
        echo $"Hubzilla won't work on an onion address"
        exit 52
    fi

    increment_app_install_progress

    HUBZILLA_PATH="/var/www/$HUBZILLA_DOMAIN_NAME/htdocs"

    function_check install_mariadb
    install_mariadb

    increment_app_install_progress

    if [ -d "/var/www/$HUBZILLA_DOMAIN_NAME" ]; then
        remove_hubzilla
    fi

    function_check get_mariadb_password
    get_mariadb_password

    increment_app_install_progress

    function_check repair_databases_script
    repair_databases_script

    increment_app_install_progress

    INSTALL_PACKAGES php-common php-cli php-curl php-gd php-mysql php-mcrypt git

    increment_app_install_progress

    INSTALL_PACKAGES php-dev imagemagick php-imagick libfcgi0ldbl

    increment_app_install_progress

    INSTALL_PACKAGES php-memcached memcached

    increment_app_install_progress

    if [ ! -d "/var/www/$HUBZILLA_DOMAIN_NAME" ]; then
        mkdir "/var/www/$HUBZILLA_DOMAIN_NAME"
    fi
    if [ ! -d "$HUBZILLA_PATH" ]; then
        mkdir -p "$HUBZILLA_PATH"
    fi

    if [ ! -f "$HUBZILLA_PATH/index.php" ]; then
        if [ -d /repos/hubzilla ]; then
            mkdir -p "$HUBZILLA_PATH"
            cp -r -p /repos/hubzilla/. "$HUBZILLA_PATH"
            cd "$HUBZILLA_PATH" || exit 24
            git pull
        else
            function_check git_clone
            git_clone "$HUBZILLA_REPO" "$HUBZILLA_PATH"
        fi

        git checkout "$HUBZILLA_COMMIT" -b "$HUBZILLA_COMMIT"
        set_completion_param "hubzilla commit" "$HUBZILLA_COMMIT"

        if [ -d /repos/hubzilla-addons ]; then
            mkdir -p "$HUBZILLA_PATH/addon"
            cp -r -p /repos/hubzilla-addons/. "$HUBZILLA_PATH/addon"
            cd "$HUBZILLA_PATH/addon" || exit 24
            git pull
        else
            git_clone "$HUBZILLA_ADDONS_REPO" "$HUBZILLA_PATH/addon"
        fi

        cd "$HUBZILLA_PATH/addon" || exit 24
        git checkout "$HUBZILLA_ADDONS_COMMIT" -b "$HUBZILLA_ADDONS_COMMIT"
        set_completion_param "hubzilla addons commit" "$HUBZILLA_ADDONS_COMMIT"

        chown -R www-data:www-data "$HUBZILLA_PATH"
    fi

    increment_app_install_progress

    if [ ! -f "$HUBZILLA_PATH/install/schema_mysql.sql" ]; then
        echo $'No database schema found for hubzilla'
        exit 25
    fi

    HUBZILLA_ONION_HOSTNAME=
    if [[ $ONION_ONLY != "no" ]]; then
        HUBZILLA_ONION_HOSTNAME=$(add_onion_service hubzilla 80 ${HUBZILLA_ONION_PORT})
    fi

    increment_app_install_progress

    hubzilla_create_database

    increment_app_install_progress

    if ! grep -q "$HUBZILLA_PATH" /etc/crontab; then
        echo "12,22,32,42,52 * *   *   *   root cd $HUBZILLA_PATH; /usr/bin/timeout 500 /usr/bin/php include/poller.php" >> /etc/crontab
    fi

    function_check add_ddns_domain
    add_ddns_domain "$HUBZILLA_DOMAIN_NAME"

    increment_app_install_progress

    if [[ "$ONION_ONLY" == "no" ]]; then
        function_check nginx_http_redirect
        nginx_http_redirect "$HUBZILLA_DOMAIN_NAME"
        { echo 'server {';
          echo '    listen 443 ssl;';
          echo '    #listen [::]:443 ssl;';
          echo "    root $HUBZILLA_PATH;";
          echo "    server_name $HUBZILLA_DOMAIN_NAME;";
          echo "    error_log /dev/null;";
          echo '    index index.php;';
          echo '    charset utf-8;';
          echo '    access_log /dev/null;'; } >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
        function_check nginx_ssl
        nginx_ssl "$HUBZILLA_DOMAIN_NAME"
        function_check nginx_security_options
        nginx_security_options "$HUBZILLA_DOMAIN_NAME"
        nginx_robots "$HUBZILLA_DOMAIN_NAME"
	if [ "${HUBZILLA_ONION_HOSTNAME}" ]; then
	    echo "    add_header Onion-Location http://${HUBZILLA_ONION_HOSTNAME}\$request_uri;" >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
	fi
        { echo '    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;';
          echo '';
          echo '    # rewrite to front controller as default rule';
          echo '    location / {'; } >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
        function_check nginx_limits
        nginx_limits "$HUBZILLA_DOMAIN_NAME"
        { echo "        rewrite ^/(.*) /index.php?q=\$uri&\$args last;";
          echo '    }';
          echo '';
          echo '    # statically serve these file types when possible';
          echo '    # otherwise fall back to front controller';
          echo '    # allow browser to cache them';
          echo '    # added .htm for advanced source code editor library';
          echo '    location ~* \.(jpg|jpeg|gif|png|ico|css|js|htm|html|ttf|woff|svg)$ {';
          echo '        expires 30d;';
          echo "        try_files \$uri /index.php?q=\$uri&\$args;";
          echo '    }';
          echo '';
          echo '    # block these file types';
          echo '    location ~* \.(tpl|md|tgz|log|out)$ {';
          echo '        deny all;';
          echo '    }';
          echo '';
          echo '    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000';
          echo '    # or a unix socket';
          echo '    location ~* \.php$ {'; } >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
        function_check nginx_limits
        nginx_limits "$HUBZILLA_DOMAIN_NAME"
        { echo '        # Zero-day exploit defense.';
          echo '        # http://forum.nginx.org/read.php?2,88845,page=3';
          echo "        # Won't work properly (404 error) if the file is not stored on this";
          echo "        # server, which is entirely possible with php-fpm/php-fcgi.";
          echo "        # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on";
          echo "        # another machine. And then cross your fingers that you won't get hacked.";
          echo "        try_files \$uri \$uri/ /index.php;";
          echo '        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini';
          echo '        fastcgi_split_path_info ^(.+\.php)(/.+)$;';
          echo '        # With php-cgi alone:';
          echo '        # fastcgi_pass 127.0.0.1:9000;';
          echo '        # With php-fpm:';
          echo "        fastcgi_pass unix:/var/run/php/php${PHP_VERSION}-fpm.sock;";
          echo '        include fastcgi_params;';
          echo '        fastcgi_index index.php;';
          echo "        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;";
          echo '        fastcgi_read_timeout 300;';
          echo '    }';
          echo '';
          echo '    # deny access to all dot files';
          echo '    location ~ /\. {';
          echo '        deny all;';
          echo '    }';
          echo '';
          echo '    location ~ /\.ht {';
          echo '      deny  all;';
          echo '    }';
          echo '}';
          echo ''; } >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
    else
        { echo 'server {';
          echo "    listen 127.0.0.1:${HUBZILLA_ONION_PORT} default_server;";
          echo '    port_in_redirect off;';
          echo "    root $HUBZILLA_PATH;";
          echo "    server_name $HUBZILLA_ONION_HOSTNAME;";
          echo "    error_log /dev/null;";
          echo '    index index.php;';
          echo '    charset utf-8;';
          echo '    access_log /dev/null;';
	  echo '    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;';
          echo '';
          echo '    # rewrite to front controller as default rule';
          echo '    location / {'; } > "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
        nginx_limits "$HUBZILLA_DOMAIN_NAME"
        nginx_security_options "$HUBZILLA_DOMAIN_NAME"
        { echo "        rewrite ^/(.*) /index.php?q=\$uri&\$args last;";
          echo '    }';
          echo '';
          echo '    # statically serve these file types when possible';
          echo '    # otherwise fall back to front controller';
          echo '    # allow browser to cache them';
          echo '    # added .htm for advanced source code editor library';
          echo '    location ~* \.(jpg|jpeg|gif|png|ico|css|js|htm|html|ttf|woff|svg)$ {';
          echo '        expires 30d;';
          echo "        try_files \$uri /index.php?q=\$uri&\$args;";
          echo '    }';
          echo '';
          echo '    # block these file types';
          echo '    location ~* \.(tpl|md|tgz|log|out)$ {';
          echo '        deny all;';
          echo '    }';
          echo '';
          echo '    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000';
          echo '    # or a unix socket';
          echo '    location ~* \.php$ {'; } >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
        nginx_limits "$HUBZILLA_DOMAIN_NAME"
        nginx_security_options "$HUBZILLA_DOMAIN_NAME"
        { echo '        # Zero-day exploit defense.';
          echo '        # http://forum.nginx.org/read.php?2,88845,page=3';
          echo "        # Won't work properly (404 error) if the file is not stored on this";
          echo "        # server, which is entirely possible with php-fpm/php-fcgi.";
          echo "        # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on";
          echo "        # another machine. And then cross your fingers that you won't get hacked.";
          echo "        try_files \$uri \$uri/ /index.php;";
          echo '        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini';
          echo '        fastcgi_split_path_info ^(.+\.php)(/.+)$;';
          echo '        # With php-cgi alone:';
          echo '        # fastcgi_pass 127.0.0.1:9000;';
          echo '        # With php-fpm:';
          echo "        fastcgi_pass unix:/var/run/php/php${PHP_VERSION}-fpm.sock;";
          echo '        include fastcgi_params;';
          echo '        fastcgi_index index.php;';
          echo "        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;";
          echo '        fastcgi_read_timeout 300;';
          echo '    }';
          echo '';
          echo '    # deny access to all dot files';
          echo '    location ~ /\. {';
          echo '        deny all;';
          echo '    }';
          echo '';
          echo '    location ~ /\.ht {';
          echo '      deny  all;';
          echo '    }';
          echo '}'; } >> "/etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME"
    fi

    function_check configure_php
    configure_php

    increment_app_install_progress

    function_check create_site_certificate
    create_site_certificate "$HUBZILLA_DOMAIN_NAME" 'yes'

    increment_app_install_progress

    if [ ! -d "$HUBZILLA_PATH/view/tpl/smarty3" ]; then
        mkdir "$HUBZILLA_PATH/view/tpl/smarty3"
    fi
    if [ ! -d "$HUBZILLA_PATH/store" ]; then
        mkdir "$HUBZILLA_PATH/store"
    fi
    if [ ! -d "$HUBZILLA_PATH/store/[data]" ]; then
        mkdir "$HUBZILLA_PATH/store/[data]"
    fi
    if [ ! -d "$HUBZILLA_PATH/store/[data]/smarty3" ]; then
        mkdir "$HUBZILLA_PATH/store/[data]/smarty3"
        chmod 1755 "$HUBZILLA_PATH/store/[data]/smarty3"
    fi
    chmod 1755 "$HUBZILLA_PATH/view/tpl"
    chown -R www-data:www-data "$HUBZILLA_PATH/store"
    chmod 1755 "$HUBZILLA_PATH/view/tpl/smarty3"

    # Ensure that the database gets backed up locally, if remote
    # backups are not being used
    function_check backup_databases_script_header
    backup_databases_script_header

    increment_app_install_progress

    function_check backup_database_local
    backup_database_local hubzilla

    chown -R www-data:www-data "$HUBZILLA_PATH"

    increment_app_install_progress

    function_check nginx_ensite
    nginx_ensite "$HUBZILLA_DOMAIN_NAME"

    function_check initialise_database
    initialise_database hubzilla "$HUBZILLA_PATH/install/schema_mysql.sql"

    increment_app_install_progress

    # create the config file
    { echo '<?php';
      echo "\$db_host = 'localhost';";
      echo "\$db_port = '0';";
      echo "\$db_user = 'root';";
      echo "\$db_pass = '${MARIADB_PASSWORD}';";
      echo "\$db_data = 'hubzilla';";
      echo "\$db_type = '0';";
      echo "\$default_timezone = 'Europe/London';"; } > "$HUBZILLA_PATH/.htconfig.php"
    if [[ "$ONION_ONLY" == 'no' ]]; then
        echo "\$a->config['system']['baseurl'] = 'https://${HUBZILLA_DOMAIN_NAME}';" >> "$HUBZILLA_PATH/.htconfig.php"
    else
        echo "\$a->config['system']['baseurl'] = 'http://${HUBZILLA_ONION_HOSTNAME}';" >> "$HUBZILLA_PATH/.htconfig.php"
    fi
    echo "\$a->config['system']['sitename'] = \"Hubzilla\";" >> "$HUBZILLA_PATH/.htconfig.php"
    HUBZILLA_LOCATION_HASH="$(create_password 30)$(create_password 30)$(create_password 30)"
    { echo "\$a->config['system']['location_hash'] = '${HUBZILLA_LOCATION_HASH}';";
      echo "\$a->config['system']['register_policy'] = REGISTER_OPEN;";
      echo "\$a->config['system']['register_text'] = '';";
      echo "\$a->config['system']['admin_email'] = '${MY_EMAIL_ADDRESS}';";
      echo "\$a->config['system']['verify_email'] = 1;";
      echo "\$a->config['system']['access_policy'] = ACCESS_PRIVATE;";
      echo "\$a->config['system']['sellpage'] = '';";
      echo "\$a->config['system']['max_import_size'] = 200000;";
      echo "\$a->config['system']['php_path'] = '/usr/bin/php';";
      echo "\$a->config['system']['directory_mode']  = DIRECTORY_MODE_NORMAL;";
      echo "\$a->config['system']['theme'] = 'redbasic';"; } >> "$HUBZILLA_PATH/.htconfig.php"
    chown www-data:www-data "$HUBZILLA_PATH/.htconfig.php"
    chmod 755 "$HUBZILLA_PATH/.htconfig.php"

    increment_app_install_progress

    systemctl restart mariadb

    increment_app_install_progress

    # shellcheck disable=SC2086
    systemctl restart php${PHP_VERSION}-fpm

    increment_app_install_progress

    systemctl restart nginx

    increment_app_install_progress

    systemctl restart cron

    "${PROJECT_NAME}-addemail" -u "$MY_USERNAME" -e "noreply@$HUBZILLA_DOMAIN_NAME" -g hubzilla --public no

    set_completion_param "hubzilla domain" "${HUBZILLA_DOMAIN_NAME}"
    APP_INSTALLED=1
}

# NOTE: deliberately there is no "exit 0"
